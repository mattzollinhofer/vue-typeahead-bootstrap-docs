(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{415:function(t,e,r){"use strict";r.r(e);var a=r(41),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"reference"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),r("h2",{attrs:{id:"props"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Name")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("type")]),t._v(" "),r("th",[t._v("Default")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("append")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Text to be appended to the "),r("code",[t._v("input-group")])])]),t._v(" "),r("tr",[r("td",[t._v("autoClose")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Boolean")])]),t._v(" "),r("td",[t._v("true")]),t._v(" "),r("td",[t._v("Whether the autocomplete should hide upon item selection")])]),t._v(" "),r("tr",[r("td",[t._v("backgroundVariant")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Background color for the autocomplete result "),r("code",[t._v("list-group")]),t._v(" items. "),r("a",{attrs:{href:"https://getbootstrap.com/docs/4.1/components/list-group/#contextual-classes",target:"_blank",rel:"noopener noreferrer"}},[t._v("See values here."),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("backgroundVariantResolver")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Function")]),t._v(" "),r("td",[t._v("input => null")]),t._v(" "),r("td",[t._v("Function which accepts the current list item data and returns a background color for the current autocomplete result "),r("code",[t._v("list-group")]),t._v(" item. The non-null/non-empty string value returned from this function will supersede the value specified in "),r("code",[t._v("backgroundVariant")]),t._v(".")])]),t._v(" "),r("tr",[r("td",[t._v("data")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Array")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Array of data to be available for querying. "),r("strong",[t._v("Required")])])]),t._v(" "),r("tr",[r("td",[t._v("disabled")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Boolean")])]),t._v(" "),r("td",[t._v("false")]),t._v(" "),r("td",[t._v("Enable or disable input field")])]),t._v(" "),r("tr",[r("td",[t._v("disabledValues")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Array")])]),t._v(" "),r("td",[t._v("false")]),t._v(" "),r("td",[t._v("The dropdown items to "),r("code",[t._v("disable")]),t._v(".")])]),t._v(" "),r("tr",[r("td",[t._v("disableSort")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Boolean")])]),t._v(" "),r("td",[t._v("false")]),t._v(" "),r("td",[t._v("If set to true, no sorting occurs and the list is presented to the user as it is given to the component. Use this if you sort the list before giving it to the component. Ex: an elasticsearch result being passed to Vue.")])]),t._v(" "),r("tr",[r("td",[t._v("highlightClass")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("String")])]),t._v(" "),r("td",[r("code",[t._v("vbt-matched-text")])]),t._v(" "),r("td",[t._v("CSS class to style highlighted text")])]),t._v(" "),r("tr",[r("td",[t._v("ieCloseFix")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),r("td",[t._v("true")]),t._v(" "),r("td",[t._v("Adds (imperfect) handling for auto closing the typeahead list on focus out in IE")])]),t._v(" "),r("tr",[r("td",[t._v("inputClass")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Class to be added to the "),r("code",[t._v("input")]),t._v(" tag for validation, etc.")])]),t._v(" "),r("tr",[r("td",[t._v("inputName")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Name to be added to the "),r("code",[t._v("input")]),t._v(" tag.")])]),t._v(" "),r("tr",[r("td",[t._v("maxMatches")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),r("td",[t._v("10")]),t._v(" "),r("td",[t._v("Maximum amount of list items to appear.")])]),t._v(" "),r("tr",[r("td",[t._v("minMatchingChars")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),r("td",[t._v("2")]),t._v(" "),r("td",[t._v("Minimum matching characters in query before the typeahead list appears")])]),t._v(" "),r("tr",[r("td",[t._v("prepend")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Text to be prepended to the "),r("code",[t._v("input-group")])])]),t._v(" "),r("tr",[r("td",[t._v("screenReaderTextSerializer")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Function")]),t._v(" "),r("td",[r("code",[t._v("input => input")])]),t._v(" "),r("td",[t._v("Function used to convert the entries in the data array into the screen reader text string. Falls back to the value of serializer.")])]),t._v(" "),r("tr",[r("td",[t._v("serializer")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Function")]),t._v(" "),r("td",[r("code",[t._v("input => input")])]),t._v(" "),r("td",[t._v("Function used to convert the entries in the data array into a text string.")])]),t._v(" "),r("tr",[r("td",[t._v("showAllResults")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Boolean")])]),t._v(" "),r("td",[t._v("false")]),t._v(" "),r("td",[t._v('Show all results even ones that highlighting doesn\'t match. This is useful when interacting with a API that returns results based on different values than what is displayed. Ex: user searches for "USA" and the service returns "United States of America".')])]),t._v(" "),r("tr",[r("td",[t._v("showOnFocus")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("code",[t._v("Boolean")])]),t._v(" "),r("td",[t._v("false")]),t._v(" "),r("td",[t._v("Show results as soon as the input gains focus before the user has typed anything.")])]),t._v(" "),r("tr",[r("td",[t._v("size")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Size of the "),r("code",[t._v("input-group")]),t._v(". Valid values: "),r("code",[t._v("sm")]),t._v(", "),r("code",[t._v("md")]),t._v(", or "),r("code",[t._v("lg")])])]),t._v(" "),r("tr",[r("td",[t._v("textVariant")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("Text color for autocomplete result "),r("code",[t._v("list-group")]),t._v(" items. "),r("a",{attrs:{href:"https://getbootstrap.com/docs/4.1/utilities/colors/#color",target:"_blank",rel:"noopener noreferrer"}},[t._v("See values here."),r("OutboundLink")],1)])])])]),t._v(" "),r("h2",{attrs:{id:"events"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("hit")]),t._v(" "),r("td",[t._v("Triggered when an autocomplete item is selected. The entry in the input data array that was selected is returned. If no autocomplete item is selected, the first entry matching the query is selected and returned.")])]),t._v(" "),r("tr",[r("td",[t._v("input")]),t._v(" "),r("td",[t._v("The component can be used with "),r("code",[t._v("v-model")])])]),t._v(" "),r("tr",[r("td",[t._v("keyup")]),t._v(" "),r("td",[t._v("Triggered when any keyup event is fired in the input. Often used for catching "),r("code",[t._v("keyup.enter")]),t._v(".")])])])]),t._v(" "),r("h2",{attrs:{id:"slots"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" Slots")]),t._v(" "),r("p",[t._v("There are "),r("code",[t._v("prepend")]),t._v(" and "),r("code",[t._v("append")]),t._v(" slots available for adding buttons or other markup. Overrides the prepend and append props.")]),t._v(" "),r("h3",{attrs:{id:"scoped-slot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scoped-slot"}},[t._v("#")]),t._v(" Scoped Slot")]),t._v(" "),r("p",[t._v("You can use a "),r("a",{attrs:{href:"https://vuejs.org/v2/guide/components-slots.html#Scoped-Slots",target:"_blank",rel:"noopener noreferrer"}},[t._v("scoped slot"),r("OutboundLink")],1),t._v(" called "),r("code",[t._v("suggestion")]),t._v(" to define custom content for the suggestion "),r("code",[t._v("list-item")]),t._v("'s. You can use bound variables "),r("code",[t._v("data")]),t._v(", which holds the data from the input array, and "),r("code",[t._v("htmlText")]),t._v(", which is the highlighted text that is used for the suggestion.")]),t._v(" "),r("p",[t._v("See the "),r("a",{attrs:{href:"https://mattzollinhofer.github.io/vue-typeahead-bootstrap-docs/examples/examples.html#custom-suggestion-slot",target:"_blank",rel:"noopener noreferrer"}},[t._v("custom suggestion slot example"),r("OutboundLink")],1),t._v(" for more info.")])])}),[],!1,null,null,null);e.default=v.exports}}]);